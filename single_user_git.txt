========== LOCAL ===============
Create repository:
    git init git_notes
        Run this command from ~/Applications and it will create
        git repository ~/Applications/git_notes.

Create file:
    gvim file
        Enter data to file and save.

Add created file to git:
    git add file
        This command stages the file for the next commit.

Show status of working directory:
    git status
        Shows status of files in directory.

Show files tracked by git:
    git ls-files

Stage modified files to be commited:
    git add file

Unstage file:
    git reset
        Changes file back to untracked status.

Commit staged files:
    git commit
        Add comments.

Stage and Commit file(s):
    git commit file
        Stages and commits file.
    git commit -a
        Stages and commits all files that have been modified and 
        deleted.

Show commit messages for current branch:
    git log --oneline
    OR:
    git log

Show commit messages for file
    git log --oneline file
    OR:
    git log file

Show branches:
    git branch

Create branch:
    git branch develop

Change branch:
    First:
        git commit -a
            This saves work in current branch
    Then:
        git checkout branch

Delete branch:
    git branch -d branch

Show file differences:
    git diff [filename]
        Show diff between working directory and index:
    git diff --cached [filename]
        Show diff between index and last commit:
    git diff HEAD [filename]
        Show diff between working directory and last commit

Merge develop branch to master:
    Commit all files in develop branch. See Stage and Commit above.
    Then:
        git checkout master
        git merge develop

Rename file or directory:
    git mv [original file/dir] [renamed file/dir]
        Changes the file name and prepares it for
        commit.

Remove file:
    git rm [file]
        Removes the file from the working directory and
        stages the deletion.

========= REMOTE =========
Remote can be another server, cloud server, GitHub, etc

GitHub:
    Sign on GitHub and create repository for git_notes.

    Associate local repository with GitHub repository:
        git remote add server https://github.com/mr-billyu/git_notes.git

    Rename remote
        git remote rename old_name new_name

    Push local branches to GitHub repository:
        git push server master
        git push server develop

Clone a repository:
    Change to the directory that will be the parent of the clone.
    ie. ~/Applications

        git clone url

    The clone directory will have been created under the parent 
    directory.  ie. ~/Applications/clone_dir



